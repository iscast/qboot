<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="org.iscast.base.dao.SysDeptDao" >
  <resultMap id="BaseResultMap" type="SysDept" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="parent_id" property="parentId" jdbcType="VARCHAR" />
    <result column="parent_ids" property="parentIds" jdbcType="VARCHAR" />
    <result column="name" property="name" jdbcType="VARCHAR" />
    <result column="sort" property="sort" jdbcType="INTEGER" />
    <result column="create_by" property="createBy" jdbcType="VARCHAR" />
    <result column="create_date" property="createDate" jdbcType="TIMESTAMP" />
    <result column="update_by" property="updateBy" jdbcType="VARCHAR" />
    <result column="update_date" property="updateDate" jdbcType="TIMESTAMP" />
    <result column="remarks" property="remarks" jdbcType="VARCHAR" />
    <result column="hasSub" property="hasSub" jdbcType="INTEGER" />
  </resultMap>
  
  <sql id="Base_Column_List" >
    id, parent_id, parent_ids, name, sort, create_by, create_date, update_by, update_date, 
    remarks
  </sql>
  
  <select id="findById" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from sys_dept
    where id = #{id}
  </select>
  
  <select id="findList" resultMap="BaseResultMap" parameterType="SysDept" >
    select 
    <include refid="Base_Column_List" />
    	, (select count(1) from sys_dept where parent_id = d.id) as hasSub
    from sys_dept d
    <where>
    		<if test="parentId !=null and parentId!=''">
    			parent_id = #{parentId}
    		</if>
    		<if test="parentIds !=null and parentIds!=''">
    			and parent_ids like concat(#{parentIds},'%')
    		</if>
    		<if test="name !=null and name!=''">
    			and name like concat('%',#{name},'%')
    		</if>
    </where>
    <!-- 有注入安全漏洞 后台系统忽略可以提高开发速度 -->
		<if test="sortField != null and sortField != '' and direction != null and direction !=''">
			order by ${sortField} ${direction}
		</if>
  </select>
  
  <delete id="deleteById" >
    delete from sys_dept where id = #{id}
  </delete>
  
  <delete id="deleteRoleDeptByDeptId" parameterType="java.lang.String">
		delete from sys_role_dept where dept_id= #{deptId}
  </delete>
	
  <insert id="insert" parameterType="SysDept" >
    insert into sys_dept (parent_id, parent_ids, name, sort, create_by, create_date, update_by, update_date, remarks)
    values (#{parentId,jdbcType=VARCHAR}, #{parentIds,jdbcType=VARCHAR}, 
      #{name,jdbcType=VARCHAR}, #{sort,jdbcType=INTEGER}, #{createBy,jdbcType=VARCHAR}, 
      #{createDate,jdbcType=TIMESTAMP}, #{updateBy,jdbcType=VARCHAR}, #{updateDate,jdbcType=TIMESTAMP}, 
      #{remarks,jdbcType=VARCHAR})
  </insert>
  
  <update id="update" parameterType="SysDept" >
    update sys_dept
    <set >
      <if test="parentId != null" >
        parent_id = #{parentId,jdbcType=VARCHAR},
      </if>
      <if test="parentIds != null" >
        parent_ids = #{parentIds,jdbcType=VARCHAR},
      </if>
      <if test="name != null" >
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="sort != null" >
        sort = #{sort,jdbcType=INTEGER},
      </if>
      <if test="updateBy != null" >
        update_by = #{updateBy,jdbcType=VARCHAR},
      </if>
      <if test="updateDate != null" >
        update_date = #{updateDate,jdbcType=TIMESTAMP},
      </if>
      <if test="remarks != null" >
        remarks = #{remarks,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id}
  </update>
  
</mapper>